"Autogenerated .vimrc entries
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

set rtp+=~/.fzf
Plugin 'VundleVim/Vundle.vim'
Plugin 'elixir-editors/vim-elixir'
Plugin 'mhinz/vim-mix-format'
Plugin 'itchyny/lightline.vim'
Plugin 'altercation/vim-colors-solarized'
Plugin 'junegunn/fzf'
Plugin 'junegunn/fzf.vim'
Plugin 'pangloss/vim-javascript'
Plugin 'leafgarland/typescript-vim'
Plugin 'elmcast/elm-vim'
Plugin 'tpope/vim-commentary'
Plugin 'hashivim/vim-terraform'
Plugin 'dense-analysis/ale'

call vundle#end()

inoremap jj <ESC>

syntax on
filetype plugin indent on
set laststatus=2
set statusline+=%#warningmsg#
set statusline+=%*
set expandtab
set shiftwidth=2
set softtabstop=2
set autowrite
set autoread
set incsearch
set nocompatible
set number
set ttyfast
set hlsearch
set laststatus=2
set noshowmode

set t_Co=256
syntax enable
set background=dark
let g:solarized_termcolors=256
let g:solarized_termtrans=1
colorscheme solarized

let g:lightline = { 'colorscheme': 'solarized'}
let g:lightline = {
      \   'component_function': {
      \     'filename': 'LightLineFilename'
      \   },
      \   'colorscheme': 'solarized'
      \ }
function! LightLineFilename()
  return expand('%')
endfunction

set omnifunc=syntaxcomplete#Complete
set wildignore+=*/node_modules/*,*/deps/*,*/tmp/*,*.so,*.swp,*.zip
noremap <C-p> :Files<cr>

let $BASH_ENV = "~/.bash_aliases"
let $FZF_DEFAULT_COMMAND = '(gitls || gitlsdirs | ack "") || ack -g ""'

"Remove spaces at the end of lines
autocmd BufWritePre * %s/\s\+$//e

autocmd BufWritePost * doautocmd Syntax
autocmd BufReadPost * doautocmd Syntax

silent !mkdir -p ~/.vim/undo
set undofile
set undodir=~/.vim/undo
let s:undos = split(globpath(&undodir, '*'), "\n")
call filter(s:undos, 'getftime(v:val) < localtime() - (60 * 60 * 24 * 90)')
call map(s:undos, 'delete(v:val)')

set iskeyword+=-

au BufRead,BufNewFile *.ex* set filetype=elixir
au BufRead,BufNewFile *.elm set filetype=elm
au BufRead,BufNewFile *.html.*eex set filetype=eelixir

let g:mix_format_on_save = 1
" let g:mix_format_silent_errors = 1

" autocmd BufWritePre <buffer> silent update %!mix format -

""" LSP config

set completeopt=menu,menuone,preview,noselect,noinsert
let g:ale_completion_enabled = 1

let g:ale_linters = {}
" let g:ale_linters.scss = ['stylelint']
" let g:ale_linters.css = ['stylelint']
" let g:ale_linters.elixir = ['elixir-ls', 'credo']
let g:ale_linters.elixir = ['elixir-ls']
" let g:ale_linters = {'elixir': ['elixir-ls']}

" let g:ale_fixers = {'*': ['remove_trailing_lines', 'trim_whitespace']}
" let g:ale_fixers.javascript = ['eslint', 'prettier']
" let g:ale_fixers.html = ['prettier']
" let g:ale_fixers.scss = ['stylelint']
" let g:ale_fixers.css = ['stylelint']
" let g:ale_fixers.elm = ['format']
" let g:ale_fixers.ruby = ['rubocop']
" let g:ale_ruby_rubocop_executable = 'bundle'
" let g:ale_fixers.elixir = ['mix_format']
" let g:ale_fixers.xml = ['xmllint']

let g:ale_sign_column_always = 1
let g:ale_elixir_credo_strict = 1

let g:ale_elixir_elixir_ls_release = expand('~/src/elixir-ls/rel')

" Optional, you can disable Dialyzer with this setting
let g:ale_elixir_elixir_ls_config = {'elixirLS': {'dialyzerEnabled': v:false}}

nnoremap dt :ALEGoToDefinition<cr>
nnoremap df :ALEFix<cr>
nnoremap K :ALEHover<cr>

"""


" ==Terraform==
au BufRead,BufNewFile *.tf* set filetype=terraform
let g:terraform_align=1
let g:terraform_fmt_on_save=1

" Disable continuing comments on a new line
autocmd FileType * set formatoptions-=cro
